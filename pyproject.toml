[tool.poetry]
name = "pyconnect"
version = "0.5.1"
description='A Python implementation of "Kafka Connect"-like functionality'
authors = ["real.digital <opensource@real-digital.de>"]
exclude = ["tests/**/*"]
license = "MIT"
include = [
    "README.md",
    "LICENSE",
    "pyproject.toml"
]

classifiers = [
    "Development Status :: 3 - Alpha",
    "Intended Audience :: Developers",
    "License :: OSI Approved :: MIT License",
    "Programming Language :: Python :: 3.6",
    "Programming Language :: Python :: 3.7",
    "Programming Language :: Python :: 3.8",
    "Programming Language :: Python :: 3.9",
    "Topic :: Software Development :: Libraries :: Application Frameworks"
  ]

[tool.poetry.dependencies]
python = "^3.6"
pycodestyle = "*"
loguru = ">=^0.4.0"
confluent-kafka = {extras = ["avro"], version = "^1.6.1"}
pyyaml = "^5.3.1"
avro-python3 = "^1.10.0"
pydantic = "^1.6.1"

[tool.poetry.dev-dependencies]
pytest = "^6.1.1"
pytest-mock = "^3.3.1"
black = "^20.8b1"
flake8 = "^3.8.4"
pytest-cov = "^2.10.1"
pykafka = "^2.8.0"

[tool.black]
line-length = 119
target_version = ['py36']
include = '\.pyi?$'

[tool.isort]
line_Length = 119
multi_line_output = 3
include_trailing_comma = true
default_section = "THIRDPARTY"
known_first_party = ["pyconnect", "tests"]

[build-system]
requires = ["poetry>=0.12"]
build-backend = "poetry.masonry.api"
